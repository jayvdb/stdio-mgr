trigger:
  - master

pr:
  branches:
    include:
    - master


jobs:
- template: azure-job.yml
  parameters:
    pythons:
      py34:
        spec: '3.4'
      py35:
        spec: '3.5'
      py36:
        spec: '3.6'
      py37:
        spec: '3.7'
    images: [linux, windows, macOs]

- job: flake8
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: pip install -U tox
      displayName: Install tox

    - script: pip install -r requirements-flake8.txt
      displayName: Install flake8 & plugins

    - script: tox -e flake8
      displayName: Lint the codebase

# This job runs the test suite, skipping any tests that
# intentionally raise warnings as part of their intended
# behavior, and reporting any warnings that are emitted
# unintentionally due to actual problems in the code.
- job: expose_warnings
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: pip install -r requirements-ci.txt
      displayName: Install CI requirements

    - script: PYTHONUNBUFFERED=1 pytest -v -W error::Warning
      displayName: Run pytest, exposing underlying warnings (Python 3.7)

- job: docs_display_warnings
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: pip install -r requirements-doc.txt
      displayName: Install documentation requirements

    - script: cd doc && make html O=-n
      displayName: Build docs

- job: docs_error_warnings
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: pip install -r requirements-doc.txt
      displayName: Install documentation requirements

    - script: cd doc && make html O=-Wn
      displayName: Build docs, erroring on any build warning

- job: doctests
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: pip install -r requirements-doc.txt
      displayName: Install documentation requirements

    - script: cd doc && make doctest
      displayName: Run doctests
